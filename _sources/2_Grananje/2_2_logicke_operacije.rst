=================
Логичке операције
=================

Логичке операције су операције које се извршавају над логичким вредностима. Улаз и излаз логичке операције су две логичке вредности.
Излаз је логичка вредност и зависи од улазних вредности.

Логичке операције које ћемо радити су:

- и (**and**)
- или (**or**)
- негација (**not**)

.. infonote::

    Логичке операције функционишу на исти начин као и аритметичке операције (сабирање, одузиманје, множенје, дељенје...). Само што се уместо бројева користе логичке вредности.


Операција и (and)
---------------------

Операција и се означава симболом **and**. Излаз је **True** ако су оба улаза **True**. У осталим случајевима излаз је **False**.

+----------------+-------------------+---------------+
| **Улаз 1**     | **Улаз 2**        | **Излаз**     |
+================+===================+===============+
| True           | True              | True          |
+----------------+-------------------+---------------+
| True           | False             | False         |
+----------------+-------------------+---------------+
| False          | True              | False         |
+----------------+-------------------+---------------+
| False          | False             | False         |
+----------------+-------------------+---------------+

.. questionnote::
    Да би особа могла да се такмичи на такмичењу мора да има манје од 18 година а више од 12 година.
    Написати програм који проверава да ли особа може да се такмичи на такмичењу ако је унат број година особе.

.. activecode:: logicke_operacije_1.py
    :coach:

    godine = int(input("Унесите број година: "))

    if godine < 18 and godine > 12:
        print("Особа може да се такмичи на такмичењу.")
    else:
        print("Особа не може да се такмичи на такмичењу.")

Операција или (or)
----------------------

Операција или се означава симболом **or**. Излаз је **True** ако је бар један од улаза **True**. У осталим случајевима излаз је **False**.

+----------------+-------------------+---------------+
| **Улаз 1**     | **Улаз 2**        | **Излаз**     |
+================+===================+===============+
| True           | True              | True          |
+----------------+-------------------+---------------+
| True           | False             | True          |
+----------------+-------------------+---------------+
| False          | True              | True          |
+----------------+-------------------+---------------+
| False          | False             | False         |
+----------------+-------------------+---------------+

.. activecode:: logicke_operacije_2.py
    :coach:

    # Menjaj sledeće vrednosti i vidi kako se menja izlaz
    a = True
    b = False
    print(a or b)

Операција негација (not)
----------------------------

Операција негација се означава симболом **not**. За разлику од прошле две операције негација прима само један параметар. 
Излаз је **True** ако је улаз **False**. Излаз је **False** ако је улаз **True**.

+----------------+---------------+
| **Улаз**       | **Излаз**     |
+================+===============+
| True           | False         |
+----------------+---------------+
| False          | True          |
+----------------+---------------+

.. activecode:: logicke_operacije_3.py
    :coach:
    
    # Menjaj sledeće vrednosti i vidi kako se menja izlaz
    a = True
    print(not a)



 
