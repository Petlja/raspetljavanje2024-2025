Функције
=========



Дефиниција:
Функција је блок кода који је дизајниран да изврши одређени задатак. Функције омогућавају да програм буде организованији, јер групишу више линија кода у један логички блок који можемо поново користити. Једном дефинисана функција може бити позвана више пута у програму са различитим улазним аргументима.

Кључне карактеристике функција:
1. **Поновна употреба кода**: Функције омогућавају да један део кода користимо више пута без понављања истих линија.
2. **Јасноћа и организација**: Подела кода на функције чини програм прегледнијим и лакшим за разумевање.
3. **Модуларност**: Функције омогућавају да се велики проблеми поделе на мање делове који су лакши за решавање.

Дефинисање функције:
Функција се дефинише коришћењем кључне речи **def**, након чега следи име функције и заграде у којима се налазе улазни аргументи. Сваки аргумент представља вредност коју функција прима када је позовемо. Функција може да врати резултат помоћу кључне речи **return**.

Пример функције која сабира два броја:

.. activecode:: funkcije100
   :coach:

   def zbir(a, b):
       return a + b

   
   rezultat = zbir(5, 7)
   print(rezultat)
   
   
- **def zbir(a, b):** Овим дефинишемо функцију са именом **zbir** и два аргумента **a** и **b**.
- **return a + b:** Функција враћа збир два броја.

Позивање функције:
Када дефинишемо функцију, можемо је позвати у програму тако што ћемо написати њено име и проследити јој потребне аргументе.

Пример позивања функције:

Ово ће исписати:
**12**

Функције са повратном вредношћу:
Функције могу вратити резултат који можемо сачувати у променљиву или користити у даљим израчунавањима. Повратна вредност се дефинише помоћу кључне речи **return**.

Пример:

.. activecode:: funkcije102
   :coach:

   def povrsina_pravougaonika(a, b):
       return a * b

   povrsina = povrsina_pravougaonika(5, 3)
   print(povrsina)


Ово ће исписати:
**15**

Функције без повратне вредности:
Неке функције могу само извршити одређену радњу без враћања резултата. Уместо повратне вредности, оне могу само исписати резултат или изменити стање програма.

Пример:

.. activecode:: funkcije103
   :coach:

   def pozdrav(ime):
       print(f"Здраво, {ime}!")

   pozdrav("Ана")


Ово ће исписати:
**"Здраво, Ана!"**

Локални и глобални домет:
Променљиве које су дефинисане унутар функције називају се **локалне променљиве** и доступне су само унутар те функције. С друге стране, **глобалне променљиве** су дефинисане изван свих функција и доступне су целом програму.

Пример:

.. activecode:: funkcije104
   :coach:

   x = 10  # Глобална променљива

   def promeni_vrednost():
       x = 5  # Локална променљива
       print(x)

   promeni_vrednost()  # Исписује локалну вредност 5
   print(x)  # Исписује глобалну вредност 10



Функције су основни градивни елемент сваког програма. Оне омогућавају лакшу организацију кода, поновну употребу и поједностављују решавање сложених проблема. Разумевање како да дефинишемо, позовемо и користимо функције је кључно за ефикасно програмирање.