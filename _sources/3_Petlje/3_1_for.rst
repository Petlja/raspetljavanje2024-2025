For петља
===========


У Пајтону, `for` петља служи за понављање одређених радњи више пута, по елементима неке колекције (као што су листе, речници, скупови, итд.) или унутар одређеног интервала вредности. Са `for` петљом можемо проћи кроз сваки елемент одређене секвенце и извршити неку радњу за сваки од њих.

Основна синтакса:

.. activecode:: for1  
   :coach:

   for елемент у секвенца:  
       # овде иде код који ће се извршити за сваки елемент


- **`елемент`** представља променљиву која узима вредност сваког појединачног елемента из секвенце.
- **`секвенца`** је колекција елемената кроз које петља пролази.


Пример 1: `for` петља кроз листу

.. activecode:: for2  
   :coach:

   vocka = ["јабука", "банана", "крушка"]  
   for vocka in voce:  
       print(vocka)


Пример 2: Коришћење `range()` функције  
Функција `range()` генерише низ бројева, који се често користе са `for` петљом.

.. activecode:: for3  
   :coach:

   for broj in range(5):  
       print(број)


Овде `range(5)` генерише бројеве од 0 до 4 (не укључујући 5).

Пример 3: Коришћење `range(start, stop, step)`

Функција `range()` може имати до три параметра:  
- **start** (почетна вредност),  
- **stop** (крајња вредност, али не укључена),  
- **step** (корак, односно интервал).

.. activecode:: for4  
   :coach:

   for broj in range(2, 10, 2):  
       print(broj)


Пример 4: Угнежђена `for` петља

Можете имати једну `for` петљу унутар друге.

.. activecode:: for5  
   :coach:

   for i in range(3):  
       for j in range(2):  
            print(f"i: {i}, j: {j}")


Пример 5: `for` петља и `else`  
`else` блок може бити коришћен са `for` петљом. Он ће се извршити када се заврши петља, осим ако није дошло до прекида `break` наредбом.

.. activecode:: for6  
   :coach:

   for broj in range(3):  
       print(broj)  
   else:  
       print("Петља је завршена!")


Кључне ствари које треба запамтити:  
- `for` петља у Пајтону служи за понављање кроз елементе неке колекције или интервала.  
- Може се комбиновати са `range()` функцијом за генерисање низа бројева.  
- Може се користити `else` блок за додатне радње након завршетка петље.

`For` петље су моћан начин за обраду података у Пајтону, посебно када треба да прођете кроз велике количине података на ефикасан начин.